{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "1ec80c9b",
   "metadata": {},
   "source": [
    "# DSA210 Final Project - Obesity & Mental Health Analysis\n",
    "Prepared for the Spring 2025 term\n",
    "\n",
    "This notebook explores the relationship between obesity, mental health, and personality traits. Using three datasets, we perform data cleaning, exploratory data analysis (EDA), hypothesis testing, and machine learning modeling."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bb57a8d",
   "metadata": {},
   "source": [
    "## Import Libraries and Load Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "79da0f2a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import chi2_contingency\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import classification_report, accuracy_score\n",
    "\n",
    "sns.set(style=\"whitegrid\")\n",
    "\n",
    "mh = pd.read_csv(\"/mnt/data/cleaned_mental_health.csv\")\n",
    "drug = pd.read_csv(\"/mnt/data/cleaned_drug.csv\")\n",
    "obesity = pd.read_csv(\"/mnt/data/cleaned_obesity.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4259a458",
   "metadata": {},
   "source": [
    "## Exploratory Data Analysis - Mental Health"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c9dcd48d",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "sns.countplot(data=mh, x='Gender', palette='Set2')\n",
    "plt.title(\"Gender Distribution\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3734e510",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "sns.countplot(data=mh, x='Gender', hue='treatment', palette='Set1')\n",
    "plt.title(\"Treatment by Gender\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e4fce5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(6, 4))\n",
    "sns.countplot(data=mh, x='Gender', hue='Growing_Stress', palette='pastel')\n",
    "plt.title(\"Growing Stress by Gender\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5eb50a3b",
   "metadata": {},
   "source": [
    "## Hypothesis Test: Is Treatment Independent of Gender?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e4758fae",
   "metadata": {},
   "outputs": [],
   "source": [
    "contingency = pd.crosstab(mh['Gender'], mh['treatment'])\n",
    "chi2, p, dof, expected = chi2_contingency(contingency)\n",
    "print(\"Chi-Square Test Statistic:\", chi2)\n",
    "print(\"p-value:\", p)\n",
    "if p < 0.05:\n",
    "    print(\"Reject the null hypothesis: Treatment is dependent on gender.\")\n",
    "else:\n",
    "    print(\"Fail to reject the null hypothesis: No significant relationship.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4aee1b80",
   "metadata": {},
   "source": [
    "## Machine Learning: Predicting Treatment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8200f317",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = mh.copy()\n",
    "label_cols = ['Gender', 'Growing_Stress', 'Mood_Swings', 'Coping_Struggles', 'Work_Interest']\n",
    "df = df[df['treatment'].isin(['Yes', 'No'])]\n",
    "df['treatment'] = df['treatment'].map({'Yes': 1, 'No': 0})\n",
    "le = LabelEncoder()\n",
    "for col in label_cols:\n",
    "    df[col] = le.fit_transform(df[col])\n",
    "\n",
    "X = df[label_cols]\n",
    "y = df['treatment']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "\n",
    "model = LogisticRegression()\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, y_pred))\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40ad9b34",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "This notebook demonstrates that gender may play a role in mental health treatment rates, based on the chi-square test.\n",
    "Additionally, personality and stress-related features show some predictive power for treatment likelihood.\n",
    "In future steps, we can combine these insights with drug consumption and obesity data for a broader model."
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
